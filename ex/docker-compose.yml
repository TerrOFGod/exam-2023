version: '3.0'

services:
  #frontend:
  #  build:
  #   context: src/frontend
  #    dockerfile: Dockerfile
  #    args:
  #      server_url: http://localhost:8081
  #  ports:
  #    - '8080:80'
  
  api:
    build:
      context: src/backend
      dockerfile: ZeroX.API/Dockerfile
    ports:
      - '8081:80'
    depends_on:
      - rabbit
      - database
    environment:
      - RABBITMQ_HOST=rabbit

      - TOKEN_KEY=super-secret-key

      - DB_HOST=database
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=zerox

  listener:
    build:
      context: src/backend
      dockerfile: ZeroX.Listener/Dockerfile
    ports:
      - '8082:80'
    depends_on:
      - rabbit
      - database
    environment:
      - RABBITMQ_HOST=rabbit

      - TOKEN_KEY=super-secret-key

      - DB_HOST=database
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=zerox

  rabbit:
    image: rabbitmq:3.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - ~/broker/data:/var/lib/rabbitmq
      - ~/broker/logs:/var/log/rabbitmq
  
  database:
    image: postgres:14-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USERNAME=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata_1:/var/lib/postgresql/data
      - pgconf_1:/etc/postgresql
      - pglog_1:/var/log/postgresql

volumes:
  pgdata_1:
    driver: local
  pgconf_1:
    driver: local
  pglog_1:
    driver: local